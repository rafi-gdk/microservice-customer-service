server:
  port: 9002
spring:
  application:
    name: customer-service
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      group-id: my-group
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  datasource:
    url: jdbc:postgresql://host.docker.internal:49153/postgres
    username: postgres
    password: postgrespw
    driverClassName: org.postgresql.Driver
  batch:
    job:
      enabled: false
  jpa:
    properties:
      format_sql: true
      show-sql: true
    hibernate:
      ddl-auto: create-drop
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include:
          - health
  endpoint:
    health:
      show-details: always


resilience4j:
  circuitbreaker:
    instances:
      test-resilience4j:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 10
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
  retry:
    instances:
      test-resilience4j:
        maxRetryAttempts: 5
        waitDuration: 10s
  ratelimiter:
    instances:
      test-resilience4j:
        registerHealthIndicator: false
        limitForPeriod: 10
        limitRefreshPeriod: 10s
        timeoutDuration: 3s

product-service:
  url: ${PRODUCT_SERVICE_URI}